services:
  mysql:
    image: mysql:latest
    container_name: mysqldb_sansam
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3308:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - springboot-network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin_sansam
    restart: always
    environment:
      PMA_HOST: mysqldb_sansam
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8090:80"
    networks:
      - springboot-network

#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: wurstmeister/kafka
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST}
#      KAFKA_CREATE_TOPICS: "Topic:1:1"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    # 볼륨 설정
#    volumes:
#      - /var/run/docker.sock
#    # 의존 관계 설정
#    depends_on:
#      - zookeeper

#  spring:
#    build:
#      context: ./toyProject
#      dockerfile: DockerFile
#    depends_on:
#      - mysql
#    ports:
#      - "8084:8084"

volumes:
  db_data:

networks:
  springboot-network:
    driver: bridge

